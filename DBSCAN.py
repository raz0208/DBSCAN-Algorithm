# -*- coding: utf-8 -*-
"""Untitled14.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1ozN0pgGISi04S3ahbUl9kmJneklpg9Km

**Implementing DBSCAN Algorithm**
"""

# Import required libraries
import numpy as np
import matplotlib.pyplot as plt
from sklearn.cluster import DBSCAN
from sklearn.datasets import make_moons, make_blobs

"""**Sample Data 1**"""

# Generate sample data
# Option 1: Two interleaving half circles (moons)
X, _ = make_moons(n_samples=300, noise=0.1)

# Plot the sample data
plt.scatter(X[:, 0], X[:, 1])
plt.title("Sample Data")
plt.show()

# Apply DBSCAN
# Parameters: eps = 0.2, min_samples = 5
dbscanX = DBSCAN(eps=0.2, min_samples=5)
labelsX = dbscanX.fit_predict(X)

# Plot the results
plt.scatter(X[:, 0], X[:, 1], c=labelsX, cmap='viridis')
plt.title("DBSCAN Clustering")
plt.show()

print("\n")
print("-----"*10)
print("\n")

# Output the labels
print("Cluster Labels:")
print(labelsX)

"""**Sample Data 2**"""

# Option 2: Blob clusters
Y, _ = make_blobs(n_samples=300, centers=4, cluster_std=0.60, random_state=0)

# Plot the sample data
plt.scatter(Y[:, 0], Y[:, 1])
plt.title("Sample Data")
plt.show()

# Apply DBSCAN
# Parameters: eps = 0.2, min_samples = 5
dbscanY = DBSCAN(eps=0.2, min_samples=5)
labelsY = dbscanY.fit_predict(Y)

# Plot the results
plt.scatter(Y[:, 0], Y[:, 1], c=labelsY, cmap='viridis')
plt.title("DBSCAN Clustering")
plt.show()

print("\n")
print("-----"*10)
print("\n")

# Output the labels
print("Cluster Labels:")
print(labelsY)